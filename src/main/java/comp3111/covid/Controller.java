package comp3111.covid;

import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;

import com.gargoylesoftware.htmlunit.javascript.host.Map;
import com.sun.prism.paint.Color;

import comp3111.covid.datastorage.Database;
import comp3111.covid.datastorage.Database.DataTitle;
import comp3111.covid.tabs.TabC3Controller;
import comp3111.covid.tabs.TabC1pageController;

import java.awt.BorderLayout;
import java.awt.Font;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.DatePicker;
import javafx.scene.control.Label;
import javafx.scene.control.ListView;
import javafx.scene.control.Tab;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.TextArea;
import javafx.scene.control.TextField;
import javafx.scene.control.ToggleGroup;
import javafx.scene.control.cell.MapValueFactory;
import javafx.scene.layout.VBox;
import javafx.scene.shape.Circle;
import javafx.stage.Modality;
import javafx.stage.Popup;
import javafx.stage.Stage;

/**
 * Building on the sample skeleton for 'ui.fxml' Controller Class generated by SceneBuilder 
 */
public class Controller {

    @FXML
    private Tab tabTaskZero;

    @FXML
    private TextField textfieldISO;

    @FXML
    private Button buttonConfirmedDeaths;

    @FXML
    private TextField textfieldDataset;

    @FXML
    private Button buttonRateOfVaccination;

    @FXML
    private Button buttonConfirmedCases;
    
    @FXML
    private Button buttonChartA;

    @FXML
    private Button buttonChartB;

    @FXML
    private Button buttonChartC;
    
    @FXML
    private Button buttonTableA;

    @FXML
    private Button buttonTableB;

    @FXML
    private Button buttonTableC;

    @FXML
    private DatePicker datepickerDateA;

    @FXML
    private DatePicker datepickerDateB;

    @FXML
    private DatePicker datepickerDateC;

    @FXML
    private DatePicker datepickerEndDateA;

    @FXML
    private DatePicker datepickerEndDateB;

    @FXML
    private DatePicker datepickerEndDateC;

    @FXML
    private DatePicker datepickerStartDateA;

    @FXML
    private DatePicker datepickerStartDateB;

    @FXML
    private DatePicker datepickerStartDateC;

    @FXML
    private ListView<?> listviewCountriesA1;

    @FXML
    private ListView<?> listviewCountriesA2;

    @FXML
    private ListView<?> listviewCountriesB1;

    @FXML
    private ListView<?> listviewCountriesB2;

    @FXML
    private ListView<?> listviewCountriesC1;

    @FXML
    private ListView<?> listviewCountriesC2;
    
    @FXML
    private Button fileChoosingButton;

    @FXML
    private Tab tabReport1;

    @FXML
    private Tab tabReport2;

    @FXML
    private Tab tabReport3;

    @FXML
    private Tab tabApp1;

    @FXML
    private Tab tabApp2;

    @FXML
    private Tab tabApp3;

    @FXML
    private TextArea textAreaConsole;
    
    @FXML private Tab tabC3;
    @FXML private Tab tabC1;
    @FXML private TabC1pageController tabC1pageController;
    @FXML private TabC3Controller tabC3Controller;
    
    private Context context = Context.getInstance();
    private Database database = context.getDatabase();
  

    /**
     *  Task Zero
     *  To be triggered by the "Confirmed Cases" button on the Task Zero Tab 
     *  
     */
    @FXML
    void doConfirmedCases(ActionEvent event) {
    	String iDataset = textfieldDataset.getText();
    	String iISO = textfieldISO.getText();
    	String oReport = DataAnalysis.getConfirmedCases(iDataset, iISO);
    	textAreaConsole.setText(oReport);
    }

  
    /**
     *  Task Zero
     *  To be triggered by the "Confirmed Deaths" button on the Task Zero Tab
     *  
     */
    @FXML
    void doConfirmedDeaths(ActionEvent event) {
    	String iDataset = textfieldDataset.getText();
    	String iISO = textfieldISO.getText();
    	String oReport = DataAnalysis.getConfirmedDeaths(iDataset, iISO);
    	textAreaConsole.setText(oReport);
    }

  
    /**
     *  Task Zero
     *  To be triggered by the "Rate of Vaccination" button on the Task Zero Tab
     *  
     */
    @FXML
    void doRateOfVaccination(ActionEvent event) {
    	String iDataset = textfieldDataset.getText();
    	String iISO = textfieldISO.getText();
    	String oReport = DataAnalysis.getRateOfVaccination(iDataset, iISO);
    	textAreaConsole.setText(oReport);
    }
    
    @FXML // click A2 button
    void makeChartA(ActionEvent event) {
    	// make chart with object LineChartSample
    	// todo: replace that chart making object
    	// source of LineChartSample(): https://docs.oracle.com/javafx/2/charts/line-chart.htm#CIHGBCFI
    	Chart test = new Chart(); // new object of chart
    	Stage stage = new Stage(); // make a new stage(window)
    	test.start(stage); // to make a chart on window
    }

    @FXML // click B2 button
    void makeChartB(ActionEvent event) {

    }

    @FXML // click C2 button
    void makeChartC(ActionEvent event) {

    }

    @FXML // click A1 button
    void makeTableA(ActionEvent event) {

    	// System.out.println("Testing A1");   
    	
    	// code below is make a jtable (popup when button is clicked)
    	// todo: make functions to get data from database and input
    	// todo2: probably make the code below an object/turn it to function
    	// reference: https://www.zentut.com/java-swing/how-to-use-jtable-to-display-data/

        new Table(); // making table code now in table class

    }

    @FXML // click B1 button
    void makeTableB(ActionEvent event) {

    }

    @FXML // click C1 button
    void makeTableC(ActionEvent event) {

    }
// For report, please fill it yourself
    
    private File chooseCSVFile() {
    	JFileChooser csvChooser = new JFileChooser("./src/main/resources/dataset");
    	FileNameExtensionFilter csvFilter = new FileNameExtensionFilter("CSV files", "csv");
    	csvChooser.setFileFilter(csvFilter);
    	int chooserReturnVal = csvChooser.showOpenDialog(null);
    	if(chooserReturnVal == JFileChooser.APPROVE_OPTION) {
    		return csvChooser.getSelectedFile();
    	}
    	return null;
    }
    
    @FXML
    void importCSVtoDatabase(ActionEvent event) {
    	File csvFile = chooseCSVFile();
    	// TODO: handle file not chosen
    	if(csvFile != null) {
    		this.database.importCSV(csvFile);
        	System.out.println("successfully imported");
        	this.database.printDatabaseContent();
    	}
    	this.tabC1pageController.updateCheckboxList();
    }
    
    Database getDatabase() {
    	return this.database;
    }
}

